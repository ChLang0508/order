<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinxiang.order.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.jinxiang.order.pojo.Order" >
    <id column="orderId" property="orderId" jdbcType="BIGINT" />
    <result column="customerId" property="customerId" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="customerName" property="customerName" jdbcType="VARCHAR"/>
    <result column="totalSum" property="totalSum" jdbcType="DECIMAL" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    orderId, `Order`.customerId, status, totalSum, createTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from Order
    where orderId = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `Order`
    where orderId = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jinxiang.order.pojo.Order" >
    insert into `Order` (orderId, customerId, status,
      totalSum, createTime)
    values (#{orderId,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, 
      #{totalSum,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jinxiang.order.pojo.Order" useGeneratedKeys="true" keyProperty="orderId">
    insert into `Order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        orderId,
      </if>
      <if test="customerId != null" >
        customerId,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="totalSum != null" >
        totalSum,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="totalSum != null" >
        #{totalSum,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinxiang.order.pojo.Order" >
    update `Order`
    <set >
      <if test="customerId != null" >
        customerId = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="totalSum != null" >
        totalSum = #{totalSum,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where orderId = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinxiang.order.pojo.Order" >
    update `Order`
    set customerId = #{customerId,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      totalSum = #{totalSum,jdbcType=DECIMAL},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where orderId = #{orderId,jdbcType=BIGINT}
  </update>
  <select id="selectBySelective" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    ,C2.name as customerName
    from `Order` inner join Customer C2 on `Order`.customerId = C2.customerId
    where 1=1
    <include refid="whereSql"/>
    order by createTime DESC
    LIMIT #{pager.start},#{pager.pageSize}
  </select>

  <select id="selectCount" resultType="int">
    select COUNT(*) from `Order`
    where 1=1
    <include refid="whereSql"/>
  </select>

  <select id="selectByCustomerID" resultType="int">
    select
    <include refid="Base_Column_List" />
    from `Order`
    where customerId = #{customerID,jdbcType=BIGINT}
    limit 1
  </select>

  <sql id="whereSql">
    <if test="order.customerId != null" >
      and customerId = #{order.customerId,jdbcType=BIGINT}
    </if>
    <if test="order.status != null" >
      and status = #{order.status,jdbcType=INTEGER}
    </if>
     <if test="order.customerName != null" >
      and customerName like concat('%',#{order.customerName,jdbcType=VARCHAR},'%')
    </if>
    <if test="order.startTime!=null and order.endTime!=null">
      and createTime between  #{order.startTime,jdbcType=DATE} and #{order.endTime,jdbcType=DATE}
    </if>
  </sql>

</mapper>